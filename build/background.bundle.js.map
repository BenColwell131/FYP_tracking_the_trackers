{"version":3,"file":"background.bundle.js","sources":["webpack:///webpack/bootstrap","webpack:///./src/js/background.js"],"sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./src/js/background.js\");\n","let numWS = 0;\r\nlet numWSSent = 0;\r\nlet numWSReceived = 0;\r\nlet numBlockableWS = 0;\r\n\r\n//TODO: fix this\r\nfunction updatePopup(){\r\n  chrome.runtime.sendMessage({\r\n    type: \"POPUP_UPDATE\",\r\n    numWS: numWS,\r\n    numWSSent: numWSSent,\r\n    numWSReceived: numWSReceived,\r\n    numBlockableWS: numBlockableWS\r\n  });\r\n}\r\n\r\nfunction filterURL(wsURL){\r\n    let filterList = chrome.runtime.getURL('assets/filters/yoyo.txt');\r\n\r\n    fetch(filterList)\r\n      .then(response => response.text())\r\n      .then(filterListString => {\r\n          // Using indexOf to see if hostname present\r\n          // TODO: implement more efficient method\r\n          if(filterListString.indexOf(wsURL.hostname) > -1){\r\n            console.log(\"Found url in filter list\");\r\n            numBlockableWS++;\r\n          }\r\n          else if(filterListString.indexOf(wsURL.hostname) === -1){\r\n            console.log(\"Url not present in filter list\");\r\n          }\r\n      })\r\n      .catch(err => console.log(err));\r\n}\r\n\r\nfunction checkFirstPartyURL(wsURL){\r\n    return new Promise((resolve, reject) => {\r\n      console.log(\"Checking WS url: \" + wsURL);\r\n\r\n      //Fetch tab url\r\n      let tabURL;\r\n      chrome.tabs.query({'active': true, 'currentWindow': true}, function(tabs){\r\n        tabURL = tabs[0].url;\r\n        // Convert to URL object for easy parsing.\r\n        tabURL = new URL(tabURL);\r\n\r\n        console.log(\"wsURL.hostname: \" + wsURL.hostname);\r\n        console.log(\"tabURL.hostname: \" + tabURL.hostname);\r\n        if(wsURL.hostname != tabURL.hostname){\r\n          console.log(\"Third Party WS Connection. Caution!\");\r\n        }\r\n        else if (wsURL.hostname === tabURL.hostname){\r\n          console.log(\"First Party WS Connection. Safe to proceed.\");\r\n        }\r\n\r\n        resolve('End of tabs.query');\r\n      });\r\n    });\r\n}\r\n\r\nchrome.runtime.onMessage.addListener(\r\n  (message, sender, sendResponse) => {\r\n    // Checks if one of our messages.\r\n    if(message.type){\r\n      switch(message.type){\r\n        case \"NEW_WS\":\r\n          if(numWS === 0){\r\n            // Alter UI Badge\r\n            chrome.browserAction.setBadgeText({text: '!'});\r\n            chrome.browserAction.setBadgeBackgroundColor({color: '#2aa4ff'});\r\n          }\r\n          numWS++;\r\n          console.log(\"New WS opened.\");\r\n\r\n          // Convert to URL object for easy parsing.\r\n          let wsURL = new URL(message.url);\r\n          checkFirstPartyURL(wsURL)\r\n            .then(filterURL(wsURL));\r\n\r\n          break;\r\n\r\n        case \"WS_FRAME_SENT\":\r\n          numWSSent++;\r\n          // console.log(\"WS frame sent. #\" + numWSSent);\r\n          break;\r\n\r\n        case \"WS_FRAME_RECIEVED\":\r\n          numWSReceived++;\r\n          // console.log(\"WS frame received. #\" + numWSReceived);\r\n          break;\r\n\r\n        case \"WS_CLOSED\":\r\n          if(numWS === 1){\r\n            // Alter UI Badge\r\n            chrome.browserAction.setBadgeText({text: ''});\r\n          }\r\n          numWS--;\r\n          console.log(\"WS Closed.\");\r\n          break;\r\n\r\n        case \"UPDATE_POPUP\":\r\n          // Done by default in all cases so nothing to do here.\r\n          break;\r\n\r\n        default:\r\n          console.log(\"Uncaught message type in background: \" + message);\r\n      }\r\n      updatePopup();\r\n    }\r\n  }\r\n);\r\n"],"mappings":";AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;AClsourceRoot":""}